@page
@using sadnerd.io.ATAS.OrderEventHub.ProjectXIntegration.CopyManager
@model sadnerd.io.ATAS.OrderEventHub.Models.Pages.CopyStrategies.IndexModel

<h1>Copy Strategies</h1>

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">
        @TempData["ErrorMessage"]
    </div>
}

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>
}

<a asp-page="/CopyStrategy/Create" class="btn btn-primary mb-3">Add New Strategy</a>

<table class="table">
    <thead>
    <tr>
        <th>Id</th>
        <th>Atas Account</th>
        <th>ProjectX Account</th>
        <th>Atas Contract</th>
        <th>ProjectX Contract</th>
        <th>Contract Multiplier</th>
        <th>Status</th>
        <th>Connection Status</th>
        <th>Actions</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var strategy in Model.CopyStrategies)
    {
        var status = Model.StrategyStatuses.FirstOrDefault(s => s.StrategyId == strategy.Id);
        var isActive = status?.State == ManagerState.Enabled;

        <tr>
            <td>@strategy.Id</td>
            <td>@strategy.AtasAccountId</td>
            <td>
                @strategy.ProjectXAccountId
                @if (strategy.ProjectXAccount?.ApiCredential == null)
                {
                    <br><small class="text-warning">⚠️ No API credentials</small>
                }
                else if (strategy.ProjectXAccount.ApiCredential.IsActive == false)
                {
                    <br><small class="text-danger">❌ Inactive credentials</small>
                }
                else
                {
                    <br><small class="text-success">✅ @strategy.ProjectXAccount.ApiCredential.DisplayName</small>
                }
            </td>
            <td>@strategy.AtasContract</td>
            <td>@strategy.ProjectXContract</td>
            <td>@strategy.ContractMultiplier</td>
            <td>
                @if (status?.State == ManagerState.Error)
                {
                    <span class="badge bg-danger">Error</span>
                    @if (!string.IsNullOrEmpty(status.ErrorMessage))
                    {
                        <br><small class="text-muted">@status.ErrorMessage</small>
                    }
                }
                else if (status?.State == ManagerState.Enabled)
                {
                    <span class="badge bg-success">Active</span>
                }
                else if (status?.State == ManagerState.Disabled)
                {
                    <span class="badge bg-secondary">Disabled</span>
                }
                else
                {
                    <span class="badge bg-warning">Not Initialized</span>
                }
            </td>
            <td>
                @status?.ConnectionStatus
            </td>
            <td>
                @if (status?.State == ManagerState.Error || status?.State == null)
                {
                    @if (strategy.ProjectXAccount?.ApiCredential?.IsActive == true)
                    {
                        <form method="post" asp-page-handler="SetState" class="d-inline">
                            <input type="hidden" name="strategyId" value="@strategy.Id" />
                            <input type="hidden" name="state" value="@ManagerState.Enabled" />
                            <button type="submit" class="btn btn-sm btn-success">Initialize & Enable</button>
                        </form>
                    }
                    else
                    {
                        <a asp-page="/ProjectXAccountEdit" asp-route-id="@strategy.ProjectXAccountId" class="btn btn-sm btn-warning">Fix Credentials</a>
                    }
                } 
                else if (status?.State == ManagerState.Disabled)
                {
                    <form method="post" asp-page-handler="SetState" class="d-inline">
                        <input type="hidden" name="strategyId" value="@strategy.Id" />
                        <input type="hidden" name="state" value="@ManagerState.Enabled" />
                        <button type="submit" class="btn btn-sm btn-success">Enable</button>
                    </form>
                }
                else if (status?.State == ManagerState.Enabled)
                {
                    <form method="post" asp-page-handler="SetState" class="d-inline">
                        <input type="hidden" name="strategyId" value="@strategy.Id" />
                        <input type="hidden" name="state" value="@ManagerState.Disabled" />
                        <button type="submit" class="btn btn-sm btn-secondary">Disable</button>
                    </form>
                }
                
                @if (!isActive)
                {
                    <a asp-page="/CopyStrategy/Edit" asp-route-id="@strategy.Id" class="btn btn-sm btn-primary ms-1">Edit</a>
                }
                
                <button class="btn btn-sm btn-danger ms-1" onclick="confirmAndDelete(@strategy.Id)" @(isActive ? "disabled title='Cannot delete an active strategy'" : "")>Delete</button>
            </td>
        </tr>
    }
    </tbody>
</table>

@section Scripts {
    <script>
        async function confirmAndDelete(strategyId) {
            if (confirm("Are you sure you want to delete this strategy?")) {
                try {
                    const response = await fetch(`/api/CopyStrategy/${strategyId}`, {
                        method: 'DELETE',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    });

                    if (response.ok) {
                        alert("Strategy deleted successfully.");
                        location.reload(); // Reload the page to update the list
                    } else {
                        const error = await response.json();
                        alert(`Failed to delete the strategy: ${error.message}`);
                    }
                } catch (error) {
                    console.error("Error deleting strategy:", error);
                    alert("An error occurred while deleting the strategy.");
                }
            }
        }
    </script>
}
